name: ai-revision
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to revise'
        required: true
        type: string
        default: 'main'
      file_names:
        description: 'File names to revise'
        required: false
        type: string
        default: ''
      model_provider:
        description: 'Model Provider'
        required: true
        type: choice
        default: '(repo default)'
        options:
          - openai
          - anthropic
          - (repo default)
      model:
        description: 'Language model (blank to use provider default)'
        type: string
      custom_prompt:
        description: 'Custom prompt'
        required: false
        type: string
        default: ''
      branch_name:
        description: 'Output branch'
        required: true
        type: string
        default: 'ai-revision-{1}'

jobs:
  ai-revise:
    name: AI Revise
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    defaults:
      run:
        shell: bash --login {0}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with: 
          ref: ${{ inputs.branch }} 
      - name: Install environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Manubot AI revision dependencies
        run: |
          # install using the same URL used for manubot in build/environment.yml
          manubot_line=$(grep "github.com/manubot/manubot" build/environment.yml)
          manubot_url=$(echo "$manubot_line" | awk -F"- " '{print $2}')

          pip install ${manubot_url}#egg=manubot[ai-rev]
          
          # install the multi-provider version of manubot-ai-editor over the current one, just for now
          pip install git+https://github.com/manubot/manubot-ai-editor@langchain-anthropic-integration#egg=manubot-ai-editor
      - name: Revise manuscript
        env:
          PROVIDER_API_KEY: ${{ secrets.PROVIDER_API_KEY || secrets.OPENAI_API_KEY }}
          AI_EDITOR_MODEL_PROVIDER: ${{ inputs.model_provider }}
          REPO_DEFAULT_MODEL_PROVIDER: ${{ vars.AI_EDITOR_MODEL_PROVIDER }}
          AI_EDITOR_LANGUAGE_MODEL: ${{ inputs.model || vars.AI_EDITOR_LANGUAGE_MODEL }}
          AI_EDITOR_FILENAMES_TO_REVISE: ${{ inputs.file_names }}
          AI_EDITOR_CUSTOM_PROMPT: ${{ inputs.custom_prompt }}
          # if specified, these will override PROVIDER_API_KEY when using that provider
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          # More variables can be specified to control the behavior of the model:
          #  https://github.com/manubot/manubot-ai-editor/blob/main/libs/manubot_ai_editor/env_vars.py
        run: |
          set -eo pipefail
          
          if [[ "${AI_EDITOR_MODEL_PROVIDER}" = "(repo default)" ]]; then
            # attempt to retrieve repo default model provider from the AI_EDITOR_MODEL_PROVIDER repo var
            if [[ ! -z "${REPO_DEFAULT_MODEL_PROVIDER}" ]]; then
              echo "* Using repo-default model provider AI_EDITOR_MODEL_PROVIDER repo variable: ${REPO_DEFAULT_MODEL_PROVIDER}"
              export AI_EDITOR_MODEL_PROVIDER="${REPO_DEFAULT_MODEL_PROVIDER}"
            else
              echo "Warning: Repo-default provider was specified, but no AI_EDITOR_MODEL_PROVIDER repo variable was set, defaulting to 'openai'"
              export AI_EDITOR_MODEL_PROVIDER="openai"
            fi
          fi

          if [[ -z "${AI_EDITOR_LANGUAGE_MODEL}" ]]; then
            echo "Warning: no language model was defined; the default model for your chosen provider will be used"
          fi

          manubot ai-revision --content-directory content/ --config-directory ci/ | tee ai-editor-stdout.txt

          # scrape the actual provider and language model used from manubot-ai-editor's output
          echo "final_model_provider=$( grep -e '^Model provider: ' ai-editor-stdout.txt | cut -d':' -f2- | xargs )" >> "$GITHUB_ENV"
          echo "final_language_model=$( grep -e '^Language model: ' ai-editor-stdout.txt | cut -d':' -f2- | xargs )" >> "$GITHUB_ENV"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: |
            revise using AI model
            
            Using the ${{ env.final_model_provider }} model ${{ env.final_language_model }}
          title: 'AI-based revision using ${{ env.final_language_model }}'
          author: ${{ env.final_model_provider }} model ${{ env.final_language_model }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          add-paths: |
            content/*.md
          branch: ${{ format(inputs.branch_name, env.final_model_provider, env.final_language_model) }}
          draft: true
